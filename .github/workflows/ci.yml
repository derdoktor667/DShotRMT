name: ESP32 Build & Quality Check

on:
  push:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # ============================================================================
  # Code Quality & Linting
  # ============================================================================
  quality-check:
    name: 'Arduino Lint Check'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v2

      - name: Install ESP32 core
        run: |
          arduino-cli core update-index > /dev/null
          arduino-cli core install esp32:esp32 > /dev/null

      - name: Arduino Lint
        uses: arduino/arduino-lint-action@v2
        with:
          path: ${{ github.workspace }}
          compliance: strict
          library-manager: update
          verbose: true

  # ============================================================================
  # Compilation Test
  # ============================================================================
  compile-test:
    name: 'Compile Example Sketches'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        examples:
          - "examples/dshot300/dshot300.ino"
          - "examples/command_manager/command_manager.ino"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Compile Example Sketches
        uses: arduino/compile-sketches@v1
        with:
          fqbn: esp32:esp32:esp32
          platforms: |
            - name: esp32:esp32
              source-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
          libraries: |
            # Install the library from the local path.
            - name: ArduinoJson 
            - name: Async TCP 
            - name: ESP Async WebServer
            - name: WiFi
            - source-path: ./ 
          sketch-paths: ${{ matrix.examples}}
          cli-compile-flags: |
            - --warnings="none"

  # ============================================================================
  # Build Status Report
  # ============================================================================
  build-summary:
    name: 'Build Summary'
    runs-on: ubuntu-latest
    if: always()
    needs: [quality-check, compile-test]

    steps:
      - name: Create Build Summary
        run: |
          echo "# 🔧 DShotRMT Build Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status | Details |" >> $GITHUB_STEP_SUMMARY  
          echo "|-------|--------|---------|" >> $GITHUB_STEP_SUMMARY
          
          # Quality Check Status
          if [[ "${{ needs.quality-check.result }}" == "success" ]]; then
            echo "| 📋 Quality Check | ✅ Passed | Arduino Lint completed successfully |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 📋 Quality Check | ❌ Failed | Check Arduino Lint report |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Compile Test Status  
          if [[ "${{ needs.compile-test.result }}" == "success" ]]; then
            echo "| 🔨 Compilation | ✅ Passed | All examples compiled successfully |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔨 Compilation | ❌ Failed | Compilation errors detected |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Overall Status
          if [[ "${{ needs.quality-check.result }}" == "success" && 
                "${{ needs.compile-test.result }}" == "success" ]]; then
            echo "## 🎉 All Checks Passed!" >> $GITHUB_STEP_SUMMARY
            echo "Your DShotRMT library is ready for deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ⚠️ Action Required" >> $GITHUB_STEP_SUMMARY
            echo "Please review the failed checks and address any issues."
          fi
